/*doc
---
title: Audio player
name: audio-player
category: Media
---
Play a piece of audio, i.e. a podcast.

```html_example
<div class="audio-player">
    <img class="audio-player__button--loading" src="../img/loading.gif" alt="Loadingâ€¦"/>

    <a class="audio-player__button touchpoint touchpoint--primary" href="#audio.mp3">
        <span class="touchpoint__button" data-icon="&#xe04b;" aria-hidden="true"></span>
        <span class="touchpoint__label screen-readable">Play</span>
    </a>

    <div class="audio-player__slider">
        <input class="audio-player__slider__played" type="text" id="audio-scrubber" value="3:00"/>
        <input class="audio-player__slider__remaining" type="text" id="audio-scrubber-left" value="-12:00"/>
        <div class="audio-player__slider__track"></div>
        <div class="audio-player__slider__knob" role="slider" style="-webkit-transform: translate3d(0px, 0, 0);"></div>
    </div>
</div>
```
*/

.audio-player {
    background-color: color(shade-1);
    padding: base-px(1);
    padding-left: 68px;
    position: relative;
    height: 68px;
    width: 100%;
    z-index: 1;


    &__button {
        position: absolute;
        top: base-px(1);
        left: base-px(1);

        &.touchpoint--primary .touchpoint__button {
            color: color(shade-1);
            background-color: color(tone-media);

            &:active {
                background-color: color(tone-media-accent);
            }
        }
    }

    &__button--loading {
        position: absolute;
        top: base-px(1);
        left: base-px(1);
        width: 44px;
        height: 44px;
        background-color: rgba(255, 255, 255, 1);
        border-top-right-radius: 30px;
        border-top-left-radius: 30px;
        border-bottom-left-radius: 29px;
        border-bottom-right-radius: 29px;
        border: 2px solid #fff;
        display: none;
    }

    &__slider-wrapper {
        &:before {
            position: absolute;
            height: 2px;
            left: 0;
            right: 0;
            bottom: 7px;
            content: "";
            background-color: color(shade-3);
        }
    }

    &__slider {
        outline: 0;
        height: 100%;
        width: 100%;
        position: relative;
        -webkit-user-select: none;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        -webkit-text-size-adjust: none;
        -webkit-touch-callout: none;
    }

    &__played,
    &__remaining {
        @include meta;
        display: inline-block;
        width: 49%;
        padding: 0 0 8px;
        margin: 0;
        color: #fff;
        opacity: 1;
        font-family: $agate-sans;
        font-weight: normal;
        background: transparent;
        border: 0;
    }

    &__remaining {
        text-align: right;
        right: 0;
    }

    &__handle {
        position: relative;
        z-index: 1;
        border-radius: 50%;
        background-color: color(tone-media-accent);
        cursor: default;
    }
}

/* Functional styling;
 * These styles are required for noUiSlider to function.
 * You don't need to change these rules to apply your design.
 */
.noUi-target,
.noUi-target * {
-webkit-touch-callout: none;
-webkit-user-select: none;
-ms-touch-action: none;
-ms-user-select: none;
-moz-user-select: none;
-moz-box-sizing: border-box;
    box-sizing: border-box;
}
.noUi-target {
    position: relative;
    direction: ltr;
}
.noUi-base {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 1; /* Fix 401 */
}
.noUi-origin {
    position: absolute;
    right: 0;
    top: 0;
    left: 0;
    bottom: 0;
}

.noUi-stacking .audio-player__handle {
/* This class is applied to the lower origin when
   its values is > 50%. */
    z-index: 10;
}
.noUi-state-tap .noUi-origin {
-webkit-transition: left 0.3s, top 0.3s;
    transition: left 0.3s, top 0.3s;
}
.noUi-state-drag * {
    cursor: inherit !important;
}

/* Painting and performance;
 * Browsers can paint handles in their own layer.
 */
.noUi-base {
    -webkit-transform: translate3d(0,0,0);
    transform: translate3d(0,0,0);
}

/* Slider size and handle placement;
 */
.noUi-horizontal {
    height: 16px;
}
.noUi-horizontal .audio-player__handle {
    width: 16px;
    height: 16px;
    left: -8px;
    top: 0;
}

/* Styling;
 */
.noUi-background {
    background: transparent;
    width: calc(100% - 16px);
    left: 8px;
}
.noUi-connect {
    // background: #3FB8AF;
    // transition: background 450ms;
}
.noUi-origin {
    //border-radius: 2px;
}
.noUi-target {
    //border-radius: 4px;
    //border: 1px solid #D3D3D3;
}
.noUi-target.noUi-connect {
//    box-shadow: inset 0 0 3px rgba(51,51,51,0.45), 0 3px 6px -5px #BBB;
}

/* Handles and cursors;
 */
.noUi-dragable {
    cursor: w-resize;
}
.noUi-vertical .noUi-dragable {
    cursor: n-resize;
}

.noUi-active {
//    box-shadow: inset 0 0 1px #FFF,
//                inset 0 1px 7px #DDD,
//                0 3px 6px -3px #BBB;
}

/* Handle stripes;
 */
// .noUi-handle:before,
// .noUi-handle:after {
//     content: "";
//     display: block;
//     position: absolute;
//     height: 14px;
//     width: 1px;
//     background: #E8E7E6;
//     left: 14px;
//     top: 6px;
// }
// .noUi-handle:after {
//     left: 17px;
// }
// .noUi-vertical .noUi-handle:before,
// .noUi-vertical .noUi-handle:after {
//     width: 14px;
//     height: 1px;
//     left: 6px;
//     top: 14px;
// }
// .noUi-vertical .noUi-handle:after {
//     top: 17px;
// }

/* Disabled state;
 */
[disabled].noUi-connect,
[disabled] .noUi-connect {
    background: #B8B8B8;
}
[disabled].noUi-origin,
[disabled] .audio-player__handle {
    cursor: not-allowed;
}


